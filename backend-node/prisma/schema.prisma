generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Equipment {
  id                   Int       @id @default(autoincrement())
  equipment_id         String    @unique
  type                 String
  site_id              String?
  check_out_date       String?
  check_in_date        String?
  engine_hours_per_day Float     @default(0)
  idle_hours_per_day   Float     @default(0)
  operating_days       Int       @default(0)
  last_operator_id     String?
  model                String?
  manufacturer         String?
  year                 Int?
  serial_number        String?
  status               String    @default("available")
  created_at           DateTime  @default(now())
  updated_at           DateTime  @updatedAt

  rentals     Rental[]
  usage_logs  UsageLog[]
  maintenance_records MaintenanceRecord[]
}

model Site {
  id            Int       @id @default(autoincrement())
  site_id       String    @unique
  name          String
  location      String?
  address       String?
  contact_person String?
  contact_phone String?
  created_at    DateTime  @default(now())

  rentals Rental[]
  demand_forecasts DemandForecast[]
}

model Operator {
  id                 Int       @id @default(autoincrement())
  operator_id        String    @unique
  name               String
  license_number     String?
  phone              String?
  email              String?
  certification_level String?
  created_at         DateTime  @default(now())

  rentals    Rental[]
  usage_logs UsageLog[]
}

model Rental {
  id                   Int       @id @default(autoincrement())
  equipment_id         Int
  site_id              Int?
  operator_id          Int?
  check_out_date       DateTime
  check_in_date        DateTime?
  expected_return_date DateTime?
  rental_rate_per_day  Float?
  total_cost           Float?
  status               String    @default("active")
  notes                String?
  created_at           DateTime  @default(now())
  updated_at           DateTime  @updatedAt

  equipment Equipment @relation(fields: [equipment_id], references: [id])
  site      Site?     @relation(fields: [site_id], references: [id])
  operator  Operator? @relation(fields: [operator_id], references: [id])
  usage_logs UsageLog[]
}

model UsageLog {
  id                  Int       @id @default(autoincrement())
  rental_id           Int
  equipment_id        Int
  operator_id         Int?
  date                DateTime
  engine_hours        Float     @default(0)
  idle_hours          Float     @default(0)
  fuel_usage          Float     @default(0)
  location_lat        Float?
  location_lng        Float?
  condition_rating    Int?
  maintenance_required Boolean  @default(false)
  maintenance_notes   String?
  created_at          DateTime  @default(now())

  rental    Rental    @relation(fields: [rental_id], references: [id])
  equipment Equipment @relation(fields: [equipment_id], references: [id])
  operator  Operator? @relation(fields: [operator_id], references: [id])
}

model Alert {
  id           Int       @id @default(autoincrement())
  rental_id    Int?
  equipment_id Int?
  alert_type   String
  severity     String    @default("medium")
  title        String
  description  String
  is_resolved  Boolean   @default(false)
  resolved_at  DateTime?
  resolved_by  String?
  created_at   DateTime  @default(now())
}

model MaintenanceRecord {
  id                   Int       @id @default(autoincrement())
  equipment_id         Int
  maintenance_type     String
  description          String?
  cost                 Float?
  scheduled_date       DateTime?
  completed_date       DateTime?
  next_maintenance_date DateTime?
  technician_name      String?
  vendor               String?
  status               String    @default("scheduled")
  created_at           DateTime  @default(now())
  updated_at           DateTime  @updatedAt

  equipment Equipment @relation(fields: [equipment_id], references: [id])
}

model DemandForecast {
  id              Int       @id @default(autoincrement())
  site_id         Int
  equipment_type  String
  forecast_date   DateTime
  predicted_demand Int
  confidence_score Float
  actual_demand   Int?
  created_at      DateTime  @default(now())

  site Site @relation(fields: [site_id], references: [id])
}
